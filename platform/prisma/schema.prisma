// Platform Service Prisma Schema
// Designed to coexist with existing transcription service tables

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enums
enum TenantStatus {
  ACTIVE
  SUSPENDED
  TRIAL
  INACTIVE
}

enum UserStatus {
  ACTIVE
  INVITED
  SUSPENDED
  INACTIVE
}

enum UserRole {
  ADMIN
  MANAGER
  USER
}

// Core Models
model Tenant {
  id        String       @id @default(uuid())
  name      String       @db.VarChar(255)
  slug      String       @unique @db.VarChar(100)
  status    TenantStatus @default(TRIAL)
  planTier  String       @default("free") @map("plan_tier") @db.VarChar(50)
  settings  Json         @default("{}")
  createdAt DateTime     @default(now()) @map("created_at")
  updatedAt DateTime     @updatedAt @map("updated_at")
  deletedAt DateTime?    @map("deleted_at")

  users        User[]
  apiKeys      ApiKey[]
  sessions     Session[]
  featureFlags FeatureFlag[]
  events       Event[]

  @@index([slug])
  @@index([status])
  @@map("tenants")
}

model User {
  id           String     @id @default(uuid())
  email        String     @unique @db.VarChar(255)
  tenantId     String     @map("tenant_id")
  role         UserRole   @default(USER)
  firstName    String     @map("first_name") @db.VarChar(100)
  lastName     String     @map("last_name") @db.VarChar(100)
  passwordHash String     @map("password_hash") @db.VarChar(255)
  status       UserStatus @default(INVITED)
  lastLoginAt  DateTime?  @map("last_login_at")
  createdAt    DateTime   @default(now()) @map("created_at")
  updatedAt    DateTime   @updatedAt @map("updated_at")
  deletedAt    DateTime?  @map("deleted_at")

  tenant   Tenant    @relation(fields: [tenantId], references: [id])
  sessions Session[]
  apiKeys  ApiKey[]
  events   Event[]

  @@index([tenantId, email])
  @@index([email])
  @@map("users")
}

model ApiKey {
  id          String    @id @default(uuid())
  tenantId    String    @map("tenant_id")
  name        String    @db.VarChar(100)
  keyHash     String    @map("key_hash") @db.VarChar(255)
  keyPrefix   String    @map("key_prefix") @db.VarChar(10)
  permissions Json      @default("[]")
  lastUsedAt  DateTime? @map("last_used_at")
  expiresAt   DateTime? @map("expires_at")
  createdBy   String    @map("created_by")
  createdAt   DateTime  @default(now()) @map("created_at")
  revokedAt   DateTime? @map("revoked_at")

  tenant Tenant @relation(fields: [tenantId], references: [id])
  user   User   @relation(fields: [createdBy], references: [id])

  @@index([keyPrefix])
  @@index([tenantId])
  @@map("api_keys")
}

model Session {
  id        String   @id @default(uuid())
  userId    String   @map("user_id")
  tenantId  String   @map("tenant_id")
  tokenHash String   @map("token_hash") @db.VarChar(255)
  ipAddress String?  @map("ip_address") @db.Inet
  userAgent String?  @map("user_agent") @db.Text
  expiresAt DateTime @map("expires_at")
  createdAt DateTime @default(now()) @map("created_at")

  user   User   @relation(fields: [userId], references: [id])
  tenant Tenant @relation(fields: [tenantId], references: [id])

  @@index([tokenHash])
  @@index([userId, tenantId])
  @@map("sessions")
}

model FeatureFlag {
  id          String   @id @default(uuid())
  tenantId    String   @map("tenant_id")
  featureName String   @map("feature_name") @db.VarChar(100)
  enabled     Boolean  @default(false)
  config      Json     @default("{}")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  tenant Tenant @relation(fields: [tenantId], references: [id])

  @@unique([tenantId, featureName])
  @@map("feature_flags")
}

model Event {
  id        String   @id @default(uuid())
  tenantId  String?  @map("tenant_id")
  userId    String?  @map("user_id")
  eventType String   @map("event_type") @db.VarChar(100)
  payload   Json
  createdAt DateTime @default(now()) @map("created_at")

  tenant Tenant? @relation(fields: [tenantId], references: [id])
  user   User?   @relation(fields: [userId], references: [id])

  @@index([tenantId, createdAt])
  @@index([eventType, createdAt])
  @@map("events")
}