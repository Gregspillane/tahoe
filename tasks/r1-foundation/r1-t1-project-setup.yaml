task:
  id: "r1-t1-project-setup"
  name: "Build Project Structure and Docker Environment"
  session_size: "Complete project scaffolding with Docker Compose infrastructure"
  
  context:
    why: "Foundation for all agent service components - provides development environment"
    integrates_with: ["database", "redis", "api-framework"]
    references:
      - "masterplan project structure section (lines 1594-1658)"
      - "roadmap phase 1 foundation infrastructure"
    
  build_spec:
    creates:
      - "services/agent-engine/src/__init__.py"
      - "services/agent-engine/src/main.py (minimal FastAPI app)"
      - "services/agent-engine/src/config.py"
      - "services/agent-engine/requirements.txt"
      - "services/agent-engine/Dockerfile"
      - "services/agent-engine/docker-compose.yml"
      - "services/agent-engine/.env.example"
      - "infrastructure/docker-compose.yml (shared services)"
    modifies:
      - "None - first task"
    uses:
      - "Python 3.11"
      - "FastAPI + Uvicorn"
      - "Docker + Docker Compose"
      - "PostgreSQL 15"
      - "Redis 7"
    
  implementation_guide:
    start_with: "Create services/agent-engine directory structure"
    core_logic:
      - "Basic FastAPI app with health endpoint"
      - "Configuration management via pydantic BaseSettings"
      - "Docker Compose with postgres, redis, and app services"
      - "Environment variable management"
    connects_to:
      - "PostgreSQL on port 5435"
      - "Redis on port 6382"
      - "API on port 8001"
    keeps_simple:
      - "No authentication yet - just basic setup"
      - "No database models - just connections"
      - "No complex middleware - just CORS"
      - "No agent logic - just health check"
    
  local_validation:
    run_commands:
      - "cd services/agent-engine"
      - "docker-compose up -d"
      - "docker-compose ps"
    verify_endpoints:
      - "GET http://localhost:8001/health returns 200"
      - "GET http://localhost:8001/docs shows Swagger UI"
    check_functionality:
      - "PostgreSQL container is running and healthy"
      - "Redis container is running and healthy"
      - "App container starts without errors"
      - "Environment variables load correctly"
    
  session_notes:
    context_critical:
      - "Service runs in services/agent-engine directory"
      - "Use docker-compose for all local development"
      - "Configuration via environment variables"
    remember_for_later:
      - "Port 8001 for API"
      - "Port 5435 for PostgreSQL"
      - "Port 6382 for Redis"
      - "Service name: agent-engine"

  implementation_checklist:
    - "Create directory structure under services/agent-engine"
    - "Write minimal FastAPI app with health endpoint"
    - "Create config.py with ServiceConfig class"
    - "Write requirements.txt with core dependencies"
    - "Create Dockerfile for Python 3.11 app"
    - "Write docker-compose.yml with all services"
    - "Create .env.example with required variables"
    - "Test containers start and connect properly"